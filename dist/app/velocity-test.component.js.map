{"version":3,"file":"velocity-test.component.js","sourceRoot":"","sources":["velocity-test.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0B,eAAe,CAAC,CAAA;AAC1C,6BAA8B,yBAAyB,CAAC,CAAA;AACxD,QAAO,SAAS,CAAC,CAAA;AACjB,2BAAyB,iBAAiB,CAAC,CAAA;AAC3C,8BAA6B,qBAAqB,CAAC,CAAA;AACnD,gCAA+B,yBAAyB,CAAC,CAAA;AACzD,8BAA6B,0BAA0B,CAAC,CAAA;AAWxD;IAOE,kCAAY,WAA0B,EAAU,KAAmB;QAPrE,iBAyCC;QAlCiD,UAAK,GAAL,KAAK,CAAc;QALnE,UAAK,GAAW,4BAA4B,CAAC;QAO3C,eAAe;QACf,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,sBAAsB;QACtB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAEpB,2FAA2F;QAC3F,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,UAAA,QAAQ;YACzC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,gEAAgE;IAChE,8CAAW,GAAX,UAAY,KAAa;QAAzB,iBASC;QAPC,IAAI,cAAc,GAAG,uBAAU,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;QAE1F,6CAA6C;QAC7C,cAAc,CAAC,SAAS,CAAC,UAAA,QAAQ;YAC/B,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;YACxC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,GAAG,KAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC;QACpF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAe,GAAf,UAAgB,GAAG,EAAE,MAAM;QAEzB,uCAAuC;QACvC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAEtB,CAAC;IAhDH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,mBAAmB;YAC7B,WAAW,EAAE,8BAA8B;YAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;YAC1C,SAAS,EAAE,CAAC,4BAAa,EAAE,4BAAY,CAAC;YACxC,UAAU,EAAE,CAAC,4BAAY,EAAE,gCAAc,CAAC;SAC3C,CAAC;;gCAAA;IA0CF,+BAAC;AAAD,CAAC,AAzCD,IAyCC;AAzCY,gCAAwB,2BAyCpC,CAAA","sourcesContent":["import { Component } from '@angular/core';\nimport { OutletService } from './services/data.service';\nimport 'rxjs/Rx';\nimport {Observable} from 'rxjs/Observable';\nimport { RowComponent } from './row/row.component';\nimport { PagerComponent } from './pager/pager.component';\nimport { StateService } from './services/state.service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'velocity-test-app',\n  templateUrl: 'velocity-test.component.html',\n  styleUrls: ['velocity-test.component.css'],\n  providers: [OutletService, StateService],\n  directives: [RowComponent, PagerComponent]\n})\nexport class VelocityTestAppComponent {\n\n  title: string = 'Outlet Table Velocity Test';\n  dataService: OutletService;\n  outletsData: JSON;\n  pagesQty: number;\n\n  constructor(dataService: OutletService, private state: StateService) {\n\n    // getting data\n    this.dataService = dataService;\n\n    // loading first pager\n    this.loadNewPage(1);\n\n    // pagination subject subscription (listen for a new page request event from pager control)\n    state.paginationSubject$.subscribe(nextPage => {\n      this.loadNewPage(parseInt(nextPage));\n    });\n\n  }\n\n  // each time we need to load a page this method should be called\n  loadNewPage(index: number) {\n\n    let dataObservable = Observable.fromPromise(this.dataService.getPagingOutletsData(index));\n\n    // listen for the first dataService execution\n    dataObservable.subscribe(response => {\n      this.outletsData = response.itemsInPage;\n      this.pagesQty = response.totalItemsQty / this.dataService.getAmountItemsPerPage();\n    });\n  }\n\n  headerItemClick(evt, sortBy) {\n\n    // sorting and reloading clicked column\n    this.dataService.sortItemsByProp(sortBy);\n    this.loadNewPage(1);\n\n  }\n}\n"]}